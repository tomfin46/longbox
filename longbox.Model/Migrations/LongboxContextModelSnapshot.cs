// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using longbox.Model;

namespace longbox.Model.Migrations
{
    [DbContext(typeof(LongboxContext))]
    partial class LongboxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("longbox.Model.Comic", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArchiveType");

                    b.Property<string>("DisplayName");

                    b.Property<string>("FileName");

                    b.Property<string>("FullPath");

                    b.Property<int>("PageCount");

                    b.Property<string>("RelativeToRootPath");

                    b.Property<string>("RootFolderId");

                    b.HasKey("Id");

                    b.HasIndex("RootFolderId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("longbox.Model.Folder", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FutureAccessToken");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("longbox.Model.Comic", b =>
                {
                    b.HasOne("longbox.Model.Folder", "RootFolder")
                        .WithMany()
                        .HasForeignKey("RootFolderId");
                });
#pragma warning restore 612, 618
        }
    }
}
